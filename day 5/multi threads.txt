import java.util.Scanner;
class Counter {
    private int count = 0;r
    public synchronized void increment() {
        count++;
    }
    public int getCount() {
        return count;
    }
}
class CounterIncrementer extends Thread {
    private Counter counter;
    private int numberOfIncrements;
    public CounterIncrementer(Counter counter, int numberOfIncrements) {
        this.counter = counter;
        this.numberOfIncrements = numberOfIncrements;
    }
    public void run() {
        for (int i = 0; i < numberOfIncrements; i++) {
            counter.increment();
        }
    }
}
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of increments per thread: ");
        int numberOfIncrements = scanner.nextInt();
        Counter counter = new Counter();
        Thread thread1 = new CounterIncrementer(counter, numberOfIncrements);
        Thread thread2 = new CounterIncrementer(counter, numberOfIncrements);
        Thread thread3 = new CounterIncrementer(counter, numberOfIncrements);
        thread1.start();
        thread2.start();
        thread3.start();
        try {
            thread1.join();
            thread2.join();
            thread3.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("Final count: " + counter.getCount());
        scanner.close();
    }
}
